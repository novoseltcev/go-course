// Code generated by MockGen. DO NOT EDIT.
// Source: app.go
//
// Generated by this command:
//
//	mockgen -source=app.go -destination=./app_mock_test.go -package=agent_test
//

// Package agent_test is a generated GoMock package.
package agent_test

import (
	context "context"
	reflect "reflect"

	schemas "github.com/novoseltcev/go-course/internal/schemas"
	gomock "go.uber.org/mock/gomock"
)

// MockReporter is a mock of Reporter interface.
type MockReporter struct {
	ctrl     *gomock.Controller
	recorder *MockReporterMockRecorder
	isgomock struct{}
}

// MockReporterMockRecorder is the mock recorder for MockReporter.
type MockReporterMockRecorder struct {
	mock *MockReporter
}

// NewMockReporter creates a new mock instance.
func NewMockReporter(ctrl *gomock.Controller) *MockReporter {
	mock := &MockReporter{ctrl: ctrl}
	mock.recorder = &MockReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReporter) EXPECT() *MockReporterMockRecorder {
	return m.recorder
}

// Report mocks base method.
func (m *MockReporter) Report(ctx context.Context, metrics []schemas.Metric) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Report", ctx, metrics)
	ret0, _ := ret[0].(error)
	return ret0
}

// Report indicates an expected call of Report.
func (mr *MockReporterMockRecorder) Report(ctx, metrics any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Report", reflect.TypeOf((*MockReporter)(nil).Report), ctx, metrics)
}
